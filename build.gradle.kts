/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

val ktMainClass = "hangman.HangmanKt"

buildscript {
  repositories {
    mavenCentral()
  }
      
  dependencies {
    classpath(kotlin("gradle-plugin", version = "1.3.72"))
  }
}

plugins {
  // Apply the Kotlin JVM plugin to add support for Kotlin.
  kotlin("jvm") version "1.3.72"

  // Apply the application plugin to add support for building a CLI application.
  application
}

repositories {
  // Use jcenter for resolving dependencies.
  // You can declare any Maven/Ivy/file repository here.
  jcenter()
}

dependencies {
  // Align versions of all Kotlin components
  implementation(platform(kotlin("bom")))

  // Use the Kotlin JDK 8 standard library.
  implementation(kotlin("stdlib-jdk8"))

  // Use the Kotlin test library.
  testImplementation(kotlin("test"))

  // Use the Kotlin JUnit integration.
  testImplementation(kotlin("test-junit"))

  // Arg parser
  implementation("com.xenomachina:kotlin-argparser:2.0.7")
}

application {
  // Define the main class for the application.
  mainClass.set(ktMainClass)
}

tasks {
  register("fatJar", Jar::class.java) {
    archiveClassifier.set("all")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
      attributes("Main-Class" to ktMainClass)
    }
    from(configurations.runtimeClasspath.get()
        .onEach { println("add from dependencies: ${it.name}") }
        .map { if (it.isDirectory) it else zipTree(it) })
    val sourcesMain = sourceSets.main.get()
    sourcesMain.allSource.forEach { println("add from sources: ${it.name}") }
    from(sourcesMain.output)
  }
}
